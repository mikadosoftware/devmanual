==================
The DevManual
==================

Thisjosnmempassingnthrough four stages of competance amd wanting to build my own kit
list - its not good enough to come along and have ti argue firbwhat inneed 
Introduction
============

A 'DevManual' is the (usually barely understandable) documentation passed
to a new coder on thier first day, explaining "how we do things around here".

It *should* be comprehensive, it *should* explain *why* as well as *how.

It so often is not ...

But this is my attempt to provide a set of best practises, and guidelines.

If I could describe the idea in one line it is


All the component parts to running a software-literate, programmable company
with examples.


Walkthrough
-----------

0. Security
This is the most basic component. And it informs so much else
- HSM (phones and ubikeys)
- identity management on every request
- zero trust security
95% of the time security is doing the right thing well.  It's the
remaining 5% that is the hard costly trade offs.  We will come to
those later.
Use CAs for SSH 
Each docker build needs to trust various ssh clients 
see smallstep.com/blog/use-ssh-certificates

Use client certificates to handle web access
Use MFA to handle web access

Don't bother with passwords etc - ???


1. code development and deployment pipeline
deployment on untrusted machines


2. plumbing


{{ conceptchapters/dm_plumbing_ci.rst }}

{{ conceptchapters/dm_projects_tickets_todoinator.rst }}

{{ conceptchapters/dm_townplanning_governance.rst }}

{{ conceptchapters/dm_fractal_management.rst }}

{{ conceptchapters/dm_team_morale_trust.rst }}

{{ conceptchapters/dm_culture_people_process.rst }}

{{ conceptchapters/dm_data.rst }}


